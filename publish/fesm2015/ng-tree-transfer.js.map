{"version":3,"file":"ng-tree-transfer.js","sources":["ng://ng-tree-transfer/src/tree-transfer.component.ts","ng://ng-tree-transfer/src/tree-transfer.module.ts","ng://ng-tree-transfer/ng-tree-transfer.ts"],"sourcesContent":["import {Component, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NzFormatEmitEvent} from 'ng-zorro-antd';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'nz-tree-transfer',\n  templateUrl: './tree-transfer.component.html',\n  styleUrls: ['./tree-transfer.component.scss']\n})\nexport class TreeTransferComponent implements OnInit {\n  @Input() titles: Array<string | TemplateRef<void>> = ['æºæ°æ®', 'ç®çæ°æ®'];\n  @Input() source: Array<any> = []; // æºæ°æ®\n  @Input() target: Array<string | number> = []; // ç®æ æ°æ®\n  @Input() showSearch = true; // æ¯å¦æ¾ç¤ºæç´¢æ¡\n  @Input() footer: string | TemplateRef<void>;\n  treeSearchValue = ''; // æ çæç´¢å¼\n  listSearchValue = ''; // åè¡¨çæç´¢å¼\n  listData: Array<any> = []; // åè¡¨æ°ç»\n  listCheckedKeys: Array<any> = []; // éä¸­çåè¡¨keys\n  treeCheckedKeys: Array<any> = []; // éä¸­çæ keys\n  treeExpandedKeys: Array<any> = [];\n  treeExpandAll = false;\n  leafKeys: Array<any> = []; // æ çææå¶å­èç¹\n  allKeys: Array<any> = []; // æ çæækeys\n  @ViewChild('tree') tree;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.initData(this.source);\n    this.treeCheckedKeys = this.listData.map(item => item.key);\n    this.treeExpandedKeys = this.treeCheckedKeys;\n  }\n\n  initData(source) {\n    source.map(item => {\n      if (this.target.indexOf(item.key) > -1) {\n        this.listData.push(item);\n      }\n      if (!item.children) {\n        this.leafKeys.push(item.key);\n      } else {\n        this.initData(item.children);\n      }\n    });\n  }\n\n  leftToRight() {\n    this.target = this.treeCheckedKeys;\n    this.listData = [];\n    this.initData(this.tree.getTreeNodes());\n  }\n\n  rightToLeft() {\n    this.target = this.listData.map(item => item.key).filter(key => this.listCheckedKeys.indexOf(key) < 0);\n    this.listData = [];\n    this.initData(this.tree.getTreeNodes());\n    this.listCheckedKeys = [];\n    this.treeCheckedKeys = this.listData.map(item => item.key);\n  }\n\n  treeOnCheck(event: NzFormatEmitEvent): void {\n    this.allKeys = [];\n    this.getTreeCheckedKeys(this.tree.getCheckedNodeList());\n    this.treeCheckedKeys = this.allKeys.filter(key => this.leafKeys.indexOf(key) > -1);\n  }\n\n  treeOnCheckAll(e: boolean) {\n    if (e) {\n      this.treeCheckedKeys = this.leafKeys;\n    } else {\n      this.treeCheckedKeys = [];\n    }\n  }\n\n  listOnCheck(e: boolean, checkedKeys: any[]) {\n    if (e) {\n      this.listCheckedKeys = _.uniq([...this.listCheckedKeys, ...checkedKeys]);\n    } else {\n      this.listCheckedKeys = this.listCheckedKeys.filter(key => checkedKeys.indexOf(key) < 0);\n    }\n  }\n\n  listOnCheckAll(e: boolean) {\n    this.listOnCheck(e, this.listData.map(item => item.key));\n  }\n\n  getTreeCheckedKeys(source) {\n    source.map(item => {\n      if (item.isChecked) {\n        this.allKeys.push(item.key);\n      }\n      if (item.children.length > 0) {\n        this.getTreeCheckedKeys(item.children);\n      }\n    });\n  }\n\n  get getLeftDisabled(): boolean {\n    return _.difference(this.listData.map(item => item.key), this.treeCheckedKeys).length === 0 &&\n      _.difference(this.treeCheckedKeys, this.listData.map(item => item.key)).length === 0;\n  }\n\n  showListSearchValue(item): boolean {\n    return this.listSearchValue.length > 0 && item.title.indexOf(this.listSearchValue) > -1;\n  }\n\n  listSearch(e) {\n    this.listSearchValue = e.target.value;\n  }\n\n  treeSearch(e) {\n    this.treeSearchValue = e.target.value;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {TreeTransferComponent} from './tree-transfer.component';\nimport {NgZorroAntdModule} from 'ng-zorro-antd';\nimport {FormsModule} from '@angular/forms';\nimport {StringTemplateOutletDirective} from 'ng-tree-transfer/src/string-template-outlet.directive';\n\n@NgModule({\n  declarations: [\n    TreeTransferComponent,\n    StringTemplateOutletDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgZorroAntdModule\n  ],\n  exports: [\n    TreeTransferComponent\n  ]\n})\nexport class TreeTransferModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["_.uniq","_.difference","tslib_1.__decorate"],"mappings":"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"}