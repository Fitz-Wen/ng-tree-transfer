!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("lodash"),require("@angular/common"),require("ng-zorro-antd"),require("@angular/forms"),require("ng-tree-transfer/src/string-template-outlet.directive")):"function"==typeof define&&define.amd?define("ng-tree-transfer",["exports","@angular/core","lodash","@angular/common","ng-zorro-antd","@angular/forms","ng-tree-transfer/src/string-template-outlet.directive"],t):t((e=e||self)["ng-tree-transfer"]={},e.ng.core,e.lodash,e.ng.common,e.ngZorroAntd,e.ng.forms,e.stringTemplateOutlet_directive)}(this,function(e,t,n,r,a,i,s){"use strict";function o(e,t,n,r){var a,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(s=(i<3?a(s):i>3?a(t,n,s):a(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s}function l(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function h(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(o){a={error:o}}finally{try{r&&!r.done&&(n=i["return"])&&n.call(i)}finally{if(a)throw a.error}}return s}var c=function(){function e(){this.titles=["源数据","目的数据"],this.source=[],this.target=[],this.showSearch=!0,this.treeSearchValue="",this.listSearchValue="",this.listData=[],this.listCheckedKeys=[],this.treeCheckedKeys=[],this.treeExpandedKeys=[],this.treeExpandAll=!1,this.leafKeys=[],this.allKeys=[]}return e.prototype.ngOnInit=function(){this.initData(this.source),this.treeCheckedKeys=this.listData.map(function(e){return e.key}),this.treeExpandedKeys=this.treeCheckedKeys},e.prototype.initData=function(e){var t=this;e.map(function(e){t.target.indexOf(e.key)>-1&&t.listData.push(e),e.children?t.initData(e.children):t.leafKeys.push(e.key)})},e.prototype.leftToRight=function(){this.target=this.treeCheckedKeys,this.listData=[],this.initData(this.tree.getTreeNodes())},e.prototype.rightToLeft=function(){var e=this;this.target=this.listData.map(function(e){return e.key}).filter(function(t){return e.listCheckedKeys.indexOf(t)<0}),this.listData=[],this.initData(this.tree.getTreeNodes()),this.listCheckedKeys=[],this.treeCheckedKeys=this.listData.map(function(e){return e.key})},e.prototype.treeOnCheck=function(e){var t=this;this.allKeys=[],this.getTreeCheckedKeys(this.tree.getCheckedNodeList()),this.treeCheckedKeys=this.allKeys.filter(function(e){return t.leafKeys.indexOf(e)>-1})},e.prototype.treeOnCheckAll=function(e){this.treeCheckedKeys=e?this.leafKeys:[]},e.prototype.listOnCheck=function(e,t){this.listCheckedKeys=e?n.uniq(function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(h(arguments[t]));return e}(this.listCheckedKeys,t)):this.listCheckedKeys.filter(function(e){return t.indexOf(e)<0})},e.prototype.listOnCheckAll=function(e){this.listOnCheck(e,this.listData.map(function(e){return e.key}))},e.prototype.getTreeCheckedKeys=function(e){var t=this;e.map(function(e){e.isChecked&&t.allKeys.push(e.key),e.children.length>0&&t.getTreeCheckedKeys(e.children)})},Object.defineProperty(e.prototype,"getLeftDisabled",{get:function(){return 0===n.difference(this.listData.map(function(e){return e.key}),this.treeCheckedKeys).length&&0===n.difference(this.treeCheckedKeys,this.listData.map(function(e){return e.key})).length},enumerable:!0,configurable:!0}),e.prototype.showListSearchValue=function(e){return this.listSearchValue.length>0&&e.title.indexOf(this.listSearchValue)>-1},e.prototype.listSearch=function(e){this.listSearchValue=e.target.value},e.prototype.treeSearch=function(e){this.treeSearchValue=e.target.value},o([t.Input(),l("design:type",Array)],e.prototype,"titles",void 0),o([t.Input(),l("design:type",Array)],e.prototype,"source",void 0),o([t.Input(),l("design:type",Array)],e.prototype,"target",void 0),o([t.Input(),l("design:type",Object)],e.prototype,"showSearch",void 0),o([t.Input(),l("design:type",Object)],e.prototype,"footer",void 0),o([t.ViewChild("tree"),l("design:type",Object)],e.prototype,"tree",void 0),e=o([t.Component({selector:"nz-tree-transfer",template:'<div class="tree-transfer">\n  <div class="tree-transfer-panel tree-transfer-left">\n    <div class="tree-transfer-panel-header">\n      <label\n        nz-checkbox\n        [ngModel]="treeCheckedKeys.length > 0 && treeCheckedKeys.length === leafKeys.length"\n        [nzIndeterminate]="treeCheckedKeys.length > 0 && treeCheckedKeys.length < leafKeys.length"\n        (ngModelChange)="treeOnCheckAll($event)"\n      ></label>\n      <span class="tree-transfer-panel-header-select">\n        {{treeCheckedKeys.length > 0 ? treeCheckedKeys.length + \'/\' : \'\'}}{{leafKeys.length}} 条数据\n      </span>\n      <span class="tree-transfer-panel-header-title">\n        <ng-container *stringTemplateOutlet="titles[0]">{{titles[0]}}</ng-container>\n      </span>\n    </div>\n    <div class="tree-transfer-panel-body"\n         [class.tree-transfer-panel-body-has-search]="showSearch"\n         [class.tree-transfer-panel-body-has-footer]="footer"\n    >\n      <div class="tree-transfer-panel-body-search" *ngIf="showSearch">\n        <nz-input-group [nzSuffix]="suffixIcon">\n          <input type="text" nz-input placeholder="Search" (keyup.enter)="treeSearch($event)"/>\n        </nz-input-group>\n      </div>\n      <div class="tree-transfer-panel-body-content">\n        <nz-tree #tree\n          nzCheckable\n          [nzData]="source"\n          [nzExpandAll]="treeExpandAll"\n          [nzCheckedKeys]="treeCheckedKeys"\n          [nzExpandedKeys]="treeExpandedKeys"\n          [nzSearchValue]="treeSearchValue"\n          (nzCheckBoxChange)="treeOnCheck($event)"\n        ></nz-tree>\n      </div>\n    </div>\n    <div *ngIf="footer" class="tree-transfer-panel-footer">\n      <ng-container *stringTemplateOutlet="footer">{{footer}}</ng-container>\n    </div>\n  </div>\n  <div class="tree-transfer-operation">\n    <button\n      nz-button\n      nzType="{{!getLeftDisabled ? \'primary\' : \'\'}}"\n      [nzSize]="\'small\'"\n      [disabled]="getLeftDisabled"\n      (click)="leftToRight()"\n    >\n      <i nz-icon type="right"></i>\n    </button>\n    <button\n      nz-button\n      nzType="{{listCheckedKeys.length !== 0 ? \'primary\' : \'\'}}"\n      [nzSize]="\'small\'"\n      [disabled]="listCheckedKeys.length === 0"\n      (click)="rightToLeft()"\n    >\n      <i nz-icon type="left"></i>\n    </button>\n  </div>\n  <div class="tree-transfer-panel tree-transfer-right">\n    <div class="tree-transfer-panel-header">\n      <label\n        nz-checkbox\n        [ngModel]="listCheckedKeys.length > 0 && listCheckedKeys.length === listData.length"\n        [nzIndeterminate]="listCheckedKeys.length > 0 && listCheckedKeys.length < listData.length"\n        (ngModelChange)="listOnCheckAll($event)"\n      ></label>\n      <span class="tree-transfer-panel-header-select">\n        {{listCheckedKeys.length > 0 ? listCheckedKeys.length + \'/\' : \'\'}}{{listData.length}} 条数据\n      </span>\n      <span class="tree-transfer-panel-header-title">\n        <ng-container *stringTemplateOutlet="titles[1]">{{titles[1]}}</ng-container>\n      </span>\n    </div>\n    <div class="tree-transfer-panel-body"\n         [class.tree-transfer-panel-body-has-search]="showSearch"\n         [class.tree-transfer-panel-body-has-footer]="footer"\n    >\n      <div class="tree-transfer-panel-body-search" *ngIf="showSearch">\n        <nz-input-group [nzSuffix]="suffixIcon">\n          <input type="text" nz-input placeholder="Search" (keyup.enter)="listSearch($event)"/>\n        </nz-input-group>\n      </div>\n      <ul class="tree-transfer-panel-body-content">\n        <li *ngFor="let item of listData">\n          <label\n            nz-checkbox\n            [ngModel]="listCheckedKeys.indexOf(item.key) > -1"\n            (ngModelChange)="listOnCheck($event, [item.key])"\n          >\n            <ng-container *ngIf="showListSearchValue(item)">\n              <span>{{item.title.substr(0, item.title.indexOf(listSearchValue))}}<span style="color: #f50;">{{listSearchValue}}</span>{{item.title.substr(item.title.indexOf(listSearchValue) + listSearchValue.length)}}</span>\n            </ng-container>\n            <ng-container *ngIf="!showListSearchValue(item)">\n              <span>{{item.title}}</span>\n            </ng-container>\n          </label>\n        </li>\n      </ul>\n    </div>\n    <div *ngIf="footer" class="tree-transfer-panel-footer">\n      <ng-container *stringTemplateOutlet="footer">{{footer}}</ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #suffixIcon>\n  <i nz-icon type="search"></i>\n</ng-template>\n',styles:[".tree-transfer{position:relative;line-height:1.5;font-family:Consolas,Menlo,Courier,monospace;text-align:left;color:rgba(0,0,0,.65)}.tree-transfer .tree-transfer-panel{width:250px;height:300px;font-size:12px;border:1px solid #d9d9d9;display:inline-block;border-radius:4px;vertical-align:middle;position:relative;padding-top:34px}.tree-transfer .tree-transfer-panel-header{padding:8px 12px;height:34px;border-radius:4px 4px 0 0;border-bottom:1px solid #d9d9d9;overflow:hidden;position:absolute;top:0;left:0;width:100%}.tree-transfer .tree-transfer-panel-header .ant-checkbox-wrapper{font-size:12px}.tree-transfer .tree-transfer-panel-header-title{position:absolute;right:12px}.tree-transfer .tree-transfer-panel-body{height:100%;font-size:12px;position:relative}.tree-transfer .tree-transfer-panel-body .ant-alert{font-size:12px}.tree-transfer .tree-transfer-panel-body .ant-alert .ant-alert-icon{top:10.5px}.tree-transfer .tree-transfer-panel-body-search{position:absolute;top:0;width:100%;padding:8px}.tree-transfer .tree-transfer-panel-body-search .ant-input{font-size:12px}.tree-transfer .tree-transfer-panel-body-content{padding:0;overflow:auto;height:100%}.tree-transfer .tree-transfer-panel-body-content .ant-tree{font-size:12px}.tree-transfer .tree-transfer-panel-body-content li{padding:4px 12px;min-height:32px;line-height:23px;transition:.3s;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.tree-transfer .tree-transfer-panel-body-content li:hover{background-color:#d2eafb}.tree-transfer .tree-transfer-panel-body-has-search{padding-top:46px}.tree-transfer .tree-transfer-panel-body-has-footer{padding-bottom:34px}.tree-transfer .tree-transfer-panel-footer{height:34px;border-radius:0 0 4px 4px;border-top:1px solid #d9d9d9;overflow:hidden;position:absolute;bottom:0;left:0;width:100%}.tree-transfer .tree-transfer-operation{display:inline-block;overflow:hidden;margin:0 8px;vertical-align:middle}.tree-transfer .tree-transfer-operation button.ant-btn{display:block;margin:4px 0}"]}),l("design:paramtypes",[])],e)}(),d=function(){function e(){}return e=o([t.NgModule({declarations:[c,s.StringTemplateOutletDirective],imports:[r.CommonModule,i.FormsModule,a.NgZorroAntdModule],exports:[c]})],e)}();e.TreeTransferComponent=c,e.TreeTransferModule=d,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng-tree-transfer.umd.min.js.map